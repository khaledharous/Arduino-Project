#include <SPI.h>
#include <MFRC522.h>
#include <Servo.h>

#define SS_PIN 10
#define RST_PIN 9
MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance

Servo myservo;  // إنشاء كائن للسيرفو
int open_duration = 159;  // مدة فتح البوابة بالميللي ثانية (1 ثانية)

void setup() {
  Serial.begin(9600);   // Initialize serial communications with the PC
  SPI.begin();          // Init SPI bus
  mfrc522.PCD_Init();   // Init MFRC522
  myservo.attach(A0);   // تعيين السيرفو إلى الدخول الرقمي A0 على Arduino
  Serial.println("Scan a RFID card");
}

void loop() {
  // Look for new cards
  if (!mfrc522.PICC_IsNewCardPresent()) {
    return;
  }
  
  // Select one of the cards
  if (!mfrc522.PICC_ReadCardSerial()) {
    return;
  }
  
  // Show UID on serial monitor
  Serial.print("UID tag :");
  String content = "";
  
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
    content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  
  Serial.println(content);
  
  // Check for incoming commands from serial monitor
  if (Serial.available() > 0) {
    String command = Serial.readStringUntil('\n');
    command.trim();
    
    if (command == "open") {
     myservo.write(180);   // إرسال إشارة للدوران ضد عقارب الساعة بأقصى سرعة
  delay(open_duration); // انتظر لمدة مدة فتح البوابة
  myservo.write(90);    // إيقاف الحركة
  delay(25000);          // انتظر25 ثانية (فترة توقف بعد الفتح)
  
  // إغلاق البوابة
  myservo.write(0);     // إرسال إشارة للدوران باتجاه عقارب الساعة بأقصى سرعة
  delay(open_duration); // انتظر لمدة مدة إغلاق البوابة
  myservo.write(90);    // إيقاف الحركة
  delay(10000);    // إيقاف الحركة
    } 
    else if (command == "close") {
      myservo.write(0);     // إرسال إشارة للدوران باتجاه عقارب الساعة بأقصى سرعة
      delay(open_duration); // انتظر لمدة إغلاق البوابة
      myservo.write(90);    // إيقاف الحركة
    } 
    else if (command == "stop") {
      myservo.write(90);    // إيقاف الحركة
    }
  }
}
